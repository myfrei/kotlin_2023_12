[versions]
kotlin = "1.9.22"
kotlinx-datetime = "0.6.0"
kotlinx-coroutines = "1.7.3"

binaryCompabilityValidator = "0.13.2"
foojay-resolver = "0.8.0"

okhttp3 = "4.12.0"
openapi-generator = "7.3.0"
jackson = "2.16.1"

coroutines = "1.8.0"

# BASE
jvm-target = "17"

#Framework
spring-boot = "3.2.0"
mockito = "5.2.1"
liquibase = "4.27.0"
exposed = "0.50.0"
# Docker
testcontainers = "1.19.7"
muschko = "9.4.0"

[libraries]
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-binaryCompatibilityValidator = { module = "org.jetbrains.kotlinx:binary-compatibility-validator", version.ref = "binaryCompabilityValidator" }
kotlin-test = {module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin"}
kotlinx-datetime = {module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime"}
kotlinx-coroutines-core = {module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines"}
kotlinx-coroutines-test = {module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines"}
okhttp3 = {module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3"}
jackson-module-kotlin = {module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson"}
jackson-kotlin = {module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson"}
jackson-datatype = {module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson"}
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "coroutines" }
coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
uuid = "com.benasher44:uuid:0.8.4"

# Message Queues
rabbitmq-client = { module = "com.rabbitmq:amqp-client", version = "5.20.0" }

#testcontainers
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-rabbitmq = { module = "org.testcontainers:rabbitmq", version.ref = "testcontainers" }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }

cor = { module = "ru.white.fh.libs:fh-lib-cor", version = "0.0.1" }

# Spring
spring-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-webflux-ui = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version = "2.3.0" }
spring-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-mockk = "com.ninja-squad:springmockk:4.0.2"
db-cache4k = "io.github.reactivecircus.cache4k:cache4k:0.13.0"
db-postgres = "org.postgresql:postgresql:42.7.3"
db-hikari = "com.zaxxer:HikariCP:5.1.0"
db-exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
db-exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
db-exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito" }

# Liquidbase
liquibase-core = {module = "org.liquibase:liquibase-core", version.ref = "liquibase"}
liquibase-picocli = "info.picocli:picocli:4.7.5"
liquibase-snakeyml = "org.yaml:snakeyaml:1.33"

[plugins]
kotlin-multiplatform = {id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin"}
kotlin-jvm = {id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin"}
foojay-resolver-convention = {id = "org.gradle.toolchains.foojay-resolver-convention", version.ref = "foojay-resolver"}
openapi-generator = {id = "org.openapi.generator", version.ref = "openapi-generator"}
shadowJar = { id = "com.github.johnrengelman.shadow", version = "8.1.1" }

# Spring
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependencies = { id = "io.spring.dependency-management", version = "1.1.4" }
spring-kotlin = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }

# Docker
muschko-remote = { id = "com.bmuschko.docker-remote-api", version.ref = "muschko" }
muschko-java = { id = "com.bmuschko.docker-java-application", version.ref = "muschko" }

liquibase = { id = "org.liquibase.gradle", version = "2.2.2" }

[bundles]
exposed = ["db-exposed-core", "db-exposed-dao", "db-exposed-jdbc"]